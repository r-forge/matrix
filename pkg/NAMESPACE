useDynLib(Matrix, .registration=TRUE)# <-> R 2.3.0 or later

importFrom("lattice", levelplot)
importFrom("graphics", image)
importFrom("utils", head, tail)
importFrom("grid", grid.rect, gpar, grob)

## Currently, group generics need to be explicitly imported (Bug?):
importFrom("methods", Arith, Compare, Math, Math2, Summary, Complex)

## Generics and functions defined in this package
export("Cholesky",
       "Diagonal",
       "Hilbert",
       "Matrix",
       "Schur",
       "band",
       "expand",
       "expm",
       "facmul",
#        "isTriangular",
#        "isDiagonal",
       "lu",
       "norm",
       "rcond",
       "readHB",
       "readMM",
       "tcrossprod",
       "tril",
       "triu",
       "unpack",
       "writeHB",
       "writeMM"
       )

## workaround S4-Group(generic|method) quirk: R/AllGeneric.R
## needs setGeneric(*, group=) and this for all non-Primitives :
export(
       ## "Math"
       "log",
       "gamma",
       "lgamma",

       ## "Math2"
       "round",
       "signif",

       ## "Summary"
       "max",
       "min",
       "range",
       "prod",
       "sum",
       "any",
       "all"
)

exportClasses(
	      "index",
## LOGIC      "logic",
	      "replValue", # if we don't export it, things fail in dispatch

              ## --- 'Matrix' mother and all its daughters : ---------------
	      "Matrix",
	      ## also intermediate `virtual' ones:
	      "dMatrix",
	      "lMatrix",
	      "nMatrix",
	      ## not yet used, but as sub-classes;
	      ## must provide them for 'hierarchy-analysis':
	      "iMatrix",
	      "zMatrix",

	      "denseMatrix",
	      "sparseMatrix",

              "compMatrix",
              "diagonalMatrix",
              "generalMatrix",
              "symmetricMatrix",
              "triangularMatrix",

	      "dsparseMatrix",
	      "lsparseMatrix",
	      "nsparseMatrix",
	      "TsparseMatrix",
	      "CsparseMatrix",
	      "RsparseMatrix",
	      "ddenseMatrix",
	      "ldenseMatrix",
	      "ndenseMatrix",

	      "dgCMatrix",
	      "dgRMatrix",# unused
	      "dgTMatrix",
	      "dgeMatrix",
	      "dpoMatrix",
	      "dppMatrix",
	      "dsCMatrix",
	      "dsRMatrix",# unused
	      "dsTMatrix",
	      "dspMatrix",
	      "dsyMatrix",
	      "dtCMatrix",
	      "dtRMatrix",# unused
	      "dtTMatrix",
	      "dtpMatrix",
	      "dtrMatrix",
              "ddiMatrix",
	      "lgeMatrix",
	      "lspMatrix",
	      "lsyMatrix",
	      "ltpMatrix",
	      "ltrMatrix",
              "ldiMatrix",
	      "ngeMatrix",
	      "nspMatrix",
	      "nsyMatrix",
	      "ntpMatrix",
	      "ntrMatrix",

	      "lgCMatrix",
	      "lgRMatrix",
	      "lgTMatrix",
	      "lsCMatrix",
	      "lsRMatrix",# unused
	      "lsTMatrix",
	      "ltCMatrix",
	      "ltRMatrix",# unused
	      "ltTMatrix",

	      "ngCMatrix",
	      "ngRMatrix",
	      "ngTMatrix",
	      "nsCMatrix",
	      "nsRMatrix",# unused
	      "nsTMatrix",
	      "ntCMatrix",
	      "ntRMatrix",# unused
	      "ntTMatrix",

              "pMatrix",

              "corMatrix", # unused

              ## --- inheriting "Matrix", but also factorizations:
	      "BunchKaufman",
	      "pBunchKaufman",
	      "Cholesky",
	      "pCholesky",

              ## --- 'MatrixFactorization' mother and all its daughters : ---

              "MatrixFactorization",

	      "LU",
              "denseLU",
              "sparseLU",

              "CHMfactor",
              "CHMsuper",
              "CHMsimpl",
              "dCHMsuper",
              "dCHMsimpl",
              "nCHMsuper",# unused
              "nCHMsimpl",# unused

              "sparseQR"
	      )

exportMethods(
	      ## Group Methods
	      "Arith",
	      "Math",
	      "Math2",
	      "Summary",
	      "Compare",

	      "!",
	      "+",# for dgT(Matrix) only
	      "%*%",

              "Cholesky",
	      "Schur",
	      "as.array",
	      "as.matrix",
	      "as.vector",
	      "as.numeric",
	      "as.logical",
              "band",
	      "chol",
	      "colMeans",
	      "colSums",
	      "coerce",
	      "crossprod",
	      "determinant",
	      "diag",
	      "dim",
	      "dimnames",
	      "dimnames<-",
	      "expand",
	      "expm",
              "head",
	      "image",
              "isSymmetric",
## 	       "isDiagonal",
## 	       "isTriangular",
	      "kronecker",
	      "norm",
              "qr",
              "qr.qy",
              "qr.qty",
              "qr.coef",
              "qr.resid",
              "qr.fitted",
	      "rcond",
	      "rowMeans",
	      "rowSums",
	      "show",
	      "solve",
	      "t",
              "tail",
	      "tcrossprod",
              "tril",
              "triu",
              "zapsmall"
	      )

exportMethods("rbind2")
exportMethods("cbind2")

