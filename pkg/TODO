- Report the problem in the Linux ldexp manual page.  The second and
  third calls in the Synopsis should be to ldexpf and ldexpl.

- [,] indexing

- group generics: "Arith" (partly done),
  but also "Compare", "Math" etc;
  see ?Math  and the examples in ?SetGeneric

- methods for rbind and cbind where they make sense

- consider moving alloc3Darray from ./src/Mutils.c to
  $(RSRC)/src/base/array.c

- data/ : names 'mm' and even more 'y' are  ``too short''.
	If we really want to keep them, don't use "LazyData"
	(such that one needs  data(*) explicitly);
	But MM would rather want something like  ex.mm and ex.y

-  slot "factors" maybe should move up to "Matrix"

-------

We have a (at least one) basic problem :
   Currently the show() method fail sometime after coercion:
   e.g. 'sy' show()s wrongly, even though it "str()" fine :

      (po <- crossprod(Matrix(0:3, 2))) # ok
      (ge <- as(po, "dgeMatrix")) # ok
      (sy <- as(po, "dsyMatrix")) # BAD
      str(sy) # looks fine

  or
      example(expand) # -> ex$L and ex$U look bad, however
      as(ex$L, "dgeMatrix") # `works'

  {Of course, we don't need a workaround but must understand
   and solve the problem}

---

- provide methods for "dspMatrix" and "dppMatrix"!

- implement (more) methods for supporting "packed" (symmetric / triangular)
  matrices; particularly something like pack() and unpack()  [to/from our
  classes from/to "numeric"] --- have already man/unpack.Rd but no method yet!

- implement diagonal Matrix class  "ddiMatrix" etc
  using constructor function Diagonal() or Diag().

---

- combine the C functions for multiplication by special forms and
  solution wrt special forms by using a 'right' argument and a
  'classed' argument.
   [done with dgeMatrix_matrix_mm();  not yet for other classes;
    and for _crossprod()]

- add more comprehensive examples / tests for Schur decomposition

- arithmetic for sparse matrices:
	     <sparseMatrix>  o  { <scalar> | <same-dim-sparseMatrix> }
  should return a sparse matrix  for at least "+" and "*" , also %%,
  and "/" and "%/%" at least when the RHS is non-zero a scalar.

---

- in lmer.c check all instances of the use of ZtX and XtX and change
  them so that having a negative last element of nc means use the
  response only (but look for it in the right place).
